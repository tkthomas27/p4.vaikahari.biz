<?php

class posts_controller extends base_controller {

	public function __construct() {
		parent::__construct();

		if(!$this->user) {
			die('Please, <a href="/users/login">Login</a>');
		}
	}

	public function add() {

		//set up the view
		$this->template->content = View::instance("v_posts_add");
		$this->template->title = "New Post";

		//render the view
		echo $this->template;
	}

	public function p_add() {

		//add this info to the incoming psot
		$_POST['user_id']=$this->user->user_id;
		$_POST['created']=Time::now();
		$_POST['modified']=Time::now();

		//send data above and content to the DB
		DB::instance(DB_NAME)->insert('posts',$_POST);

		//route user to the post
		Router::redirect('/posts/success');

	}

	public function success() {

		//set up the view
		$this->template->content = View::instance("v_posts_success");
		$this->template->title = "Successful Post!";

		//render the view
		echo $this->template;


	}

	public function index() {

		//Set up the View
		$this->template->content = View::instance('v_posts_index');
		$this->template->title   = "All Posts";

		//establish a query that joins post contents to users ids, displays them if they are being followed, and orders them by time
		$q = 'SELECT 
				posts.content,
				posts.created,
				posts.user_id AS post_user_id,
				users_users.user_id AS follower_id,
				users.first_name,
				users.last_name
			FROM posts
			INNER JOIN users_users 
				ON posts.user_id = users_users.user_id_followed
			INNER JOIN users 
				ON posts.user_id = users.user_id
			WHERE users_users.user_id = '.$this->user->user_id.'
			ORDER BY posts.created DESC';

		//Run the query, store the results in the variable $posts
		$posts = DB::instance(DB_NAME)->select_rows($q);

		//set up the view
		$this->template->content->posts = $posts;

		//Render the View
		echo $this->template;

	}

	public function users() {

		//setup the view
		$this->template->content = View::instance("v_posts_users");
		$this->template->title   = "Users";

		//Build the query to get all the users
		$q = "SELECT *
			FROM users";

		//Store the result array in the variable $users
		$users = DB::instance(DB_NAME)->select_rows($q);

		//Build the query to figure out what connections does this user already have? 
		$q = "SELECT * 
			FROM users_users
			WHERE user_id = ".$this->user->user_id;

		//Store our results (an array) in the variable $connections
		$connections = DB::instance(DB_NAME)->select_array($q, 'user_id_followed');

		//Pass data to the view
		$this->template->content->users       = $users;
		$this->template->content->connections = $connections;

		//Render the view
		echo $this->template;

	}

	public function follow($user_id_followed) {

		//create a var to store data generated by following a user
		$data = Array(
			"created" => Time::now(),
			"user_id"=> $this->user->user_id,
			"user_id_followed" => $user_id_followed
			);

		//insert array into DB
		DB::instance(DB_NAME)->insert('users_users',$data);

		//route user to users page
		Router::redirect("/posts/users");
	}

	public function unfollow($user_id_followed) {

		//create a var to store data generated by following
		$where_condition = 'WHERE user_id = '.$this->user->user_id.' AND user_id_followed = '.$user_id_followed;

		//delete where this condition is met
		DB::instance(DB_NAME)->delete('users_users',$where_condition);
		
		//route user to users page
		Router::redirect("/posts/users");
	}
 }